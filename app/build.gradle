import com.android.builder.core.DefaultManifestParser

apply plugin: 'com.android.application'
apply plugin: 'realm-android'
apply plugin: 'com.neenbedankt.android-apt'



def getVersionNameFromManifest() {
    def manifestParser = new DefaultManifestParser(android.sourceSets.main.manifest.srcFile)
    return manifestParser.getVersionName()
}

def getVersionCodeFromManifest() {
    def manifestParser = new DefaultManifestParser(android.sourceSets.main.manifest.srcFile)
    return manifestParser.getVersionCode()
}

def getVersionPackageFromManifest() {
    def manifestParser = new DefaultManifestParser(android.sourceSets.main.manifest.srcFile)
    return manifestParser.getPackage()
}

android {
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    defaultConfig {
        applicationId getVersionPackageFromManifest()
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode getVersionCodeFromManifest()
        versionName getVersionNameFromManifest()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

    dependencies {
        compile fileTree(include: ['*.jar'], dir: 'libs')
        androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
            exclude group: 'com.android.support', module: 'support-annotations'
        })
        testCompile 'junit:junit:4.12'
        compile project(path: ':framelib')
        compile 'com.jakewharton:butterknife:8.8.1'
        apt 'com.jakewharton:butterknife-compiler:8.8.1'
    }

